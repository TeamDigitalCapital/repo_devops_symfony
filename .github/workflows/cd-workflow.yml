name: CD Workflow

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Minikube
        run: |
          minikube start

      - name: Create MySQL Deployment
        run: kubectl create -f ./resources/kubernetes/deployments/mysql.yaml

      - name: Create PHPMyAdmin Deployment
        run: kubectl create -f ./resources/kubernetes/deployments/phpmyadmn.yaml

      - name: Create Local Service
        run: kubectl create -f ./resources/kubernetes/services/local-service.yaml

      - name: Create PHP7 and NGINX Deployments
        run: kubectl create -f ./resources/kubernetes/deployments/local-deployment.yaml

      - name: Wait for services and pods to be ready
        run: |
          echo "Waiting for services and pods to be ready..."
          for i in {1..60}; do
            if kubectl get svc nginx-service && kubectl get svc phpmyadmin && kubectl get pods | grep -E 'Running|Pending'; then
              echo "Services and pods are ready!"
              break
            fi
            echo "Waiting... ($i/60)"
            sleep 5
          done

      - name: Display Pods
        run: kubectl get pods

      - name: Wait for Pods to be in Running state
        run: |
          echo "Waiting for pods to be in Running state..."
          for i in {1..60}; do
            if kubectl get pods | grep 'Running'; then
              echo "All pods are running!"
              break
            fi
            echo "Waiting for pods... ($i/60)"
            sleep 5
          done

      - name: Get NGINX Service URL
        run: |
          NGINX_URL=$(minikube service nginx-service --url || echo "Service not found")
          echo "NGINX Service URL: $NGINX_URL"

      - name: Get PHPMyAdmin Service URL
        run: |
          PHP_MYADMIN_URL=$(minikube service phpmyadmin --url || echo "Service not found")
          echo "PHPMyAdmin Service URL: $PHP_MYADMIN_URL"

      - name: Display NGINX Logs if Crash
        if: always()
        run: |
          POD_NAME=$(kubectl get pods --field-selector=status.phase=Running -l app=nginx-deployment -o jsonpath="{.items[0].metadata.name}" || echo "")
          if [ -n "$POD_NAME" ]; then
            echo "Displaying logs for NGINX pod $POD_NAME..."
            kubectl logs $POD_NAME
          else
            echo "No running NGINX pod found! Fetching logs for any NGINX pod..."
            kubectl get pods -l app=nginx-deployment
            kubectl logs $(kubectl get pods -l app=nginx-deployment -o jsonpath="{.items[0].metadata.name}")
          fi
