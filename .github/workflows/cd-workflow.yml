name: Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: |
        docker buildx build --push --tag solmos034/symfony_project01:latest .

    - name: Install Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl

    - name: Start Minikube
      run: minikube start --driver=docker

    - name: Set up kubectl
      run: |
        mkdir -p $HOME/.kube
        minikube kubectl -- config view --raw > $HOME/.kube/config

    - name: Deploy to Minikube
      run: |
        kubectl apply -f k8s/pvc.yml
        kubectl apply -f k8s/database.yml
        kubectl apply -f k8s/app.yml

    - name: Wait for MySQL to be ready
      run: |
        kubectl rollout status deployment/mysql --timeout=120s

    - name: Wait for PHP Apache to be ready
      run: |
        kubectl rollout status deployment/php-apache --timeout=120s

    - name: Verify MySQL Service
      run: |
        kubectl get service mysql

    - name: Verify PHP Apache Service
      run: |
        kubectl get service php-apache

    - name: Output Deployment Status
      run: |
        kubectl get deployments
        kubectl get pods

    - name: Clean up Minikube
      run: minikube delete
